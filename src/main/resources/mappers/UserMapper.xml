<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xyz.home.dao.UserDao" >


  <resultMap id="BaseResultMap" type="com.xyz.home.model.User" >
    <id column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="r_id" property="rId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="resultMap" type="map" >
    <result column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="r_id" property="rId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="add_date" property="addDate" jdbcType="TIMESTAMP" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="selectUserLogin" resultMap="BaseResultMap" parameterType="com.xyz.home.model.User">
  SELECT * from user u LEFT JOIN role r on r.r_id=u.r_id  where u.user_name=#{userName} and u.password=#{password}
  </select>
  
   <select id="selectUserList" resultMap="BaseResultMap" parameterType="map">
  SELECT * from user u where u.user_name=#{userName}
  </select>
  
  <update id="modUserLogInfo" parameterType="com.xyz.home.model.User">
  update user set login_time=#{loginTime},login_ip=#{loginIp} where u_id=#{uId}
  </update>
  
  <select id="selectUser" resultMap="resultMap" parameterType="map">
  SELECT u.u_id,r.r_id,u.user_name,u.login_ip,u.login_time,r.role_name,u.add_date from user u LEFT JOIN role r on r.r_id=u.r_id
  <where>
	  <if test="userName!=null and userName!=''">
	  u.user_name like CONCAT('%',#{userName},'%')
	  </if>
	  <if test="loginIp!=null and loginIp!=''">
	  and u.login_ip like CONCAT('%',#{loginIp},'%')
	  </if>
	  <if test="roleName!=null and roleName!=''">
	  and r.role_name like CONCAT('%',#{roleName},'%')
	  </if>
	  <if test="beginTime!=null and beginTime!=''">
	  and u.login_time &gt;=#{beginTime}
	  </if>
	  <if test="endTime!=null and endTime!=''">
	  and u.login_time &lt;=#{endTime}
	  </if>
  </where>
  order by ${sort} ${order} limit #{start},#{pageSize}
  </select>
  
  <select id="selectUserCount" resultType="int" parameterType="map">
  SELECT count(1) from user u LEFT JOIN role r on r.r_id=u.r_id
  <where>
	  <if test="userName!=null and userName!=''">
	  u.user_name like CONCAT('%',#{userName},'%')
	  </if>
	  <if test="loginIp!=null and loginIp!=''">
	  and u.login_ip like CONCAT('%',#{loginIp},'%')
	  </if>
	  <if test="roleName!=null and roleName!=''">
	  and r.role_name like CONCAT('%',#{roleName},'%')
	  </if>
	  <if test="beginTime!=null and beginTime!=''">
	  and u.login_time &gt;=#{beginTime}
	  </if>
	  <if test="endTime!=null and endTime!=''">
	  and u.login_time &lt;=#{endTime}
	  </if>
  </where>
  </select>
  
  <insert id="addUser" parameterType="com.xyz.home.model.User" useGeneratedKeys="true" keyProperty="uId">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="addDate != null" >
        add_date,
      </if>
      <if test="rId != null" >
        r_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
	<if test="userName != null" >
       #{userName,jdbcType=VARCHAR},
     	</if>
	<if test="password != null" >
       #{password,jdbcType=VARCHAR},
     	</if>
     <if test="addDate != null" >
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rId != null" >
        #{rId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="modUser" parameterType="map">
   update user
    <set>
      <if test="userName != null and userName!=''" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password!=''" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="rId != null and rId!=''" >
        r_id = #{rId,jdbcType=INTEGER},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  
  <delete id="delUser" parameterType="map">
  delete from user where u_id in
	<foreach item="item" index="index" collection="ids"
      open="(" separator="," close=")">
        #{item}
  	</foreach>
  </delete>
  
  
  <update id="modUserRoleNull" parameterType="map">
   update user set r_id = null where r_id in
	<foreach item="item" index="index" collection="ids"
      open="(" separator="," close=")">
        #{item}
  	</foreach>
  </update>
</mapper>